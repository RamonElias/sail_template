# For more information: https://laravel.com/docs/sail
version: '3'
services:
    laravel.test:
        build:
            context: ./docker/8.1
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.1/app
        # extra_hosts:
            # - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            # - mysql
            - pgsql
            - redis
            - meilisearch
            - mailhog
            - selenium
    # mysql:
    #     image: 'mysql/mysql-server:8.0'
    #     ports:
    #         - '${FORWARD_DB_PORT:-3306}:3306'
    #     environment:
    #         MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
    #         MYSQL_ROOT_HOST: "%"
    #         MYSQL_DATABASE: '${DB_DATABASE}'
    #         MYSQL_USER: '${DB_USERNAME}'
    #         MYSQL_PASSWORD: '${DB_PASSWORD}'
    #         MYSQL_ALLOW_EMPTY_PASSWORD: 1
    #     volumes:
    #         - 'sail-mysql:/var/lib/mysql'
    #         - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
    #     networks:
    #         - sail
    #     healthcheck:
    #         test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
    #         retries: 3
    #         timeout: 5s
    pgsql:
        # image: postgres:13
        image: postgres:latest
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        # environment:
            # PGPASSWORD: '${DB_PASSWORD:-secret}'
            # POSTGRES_DB: '${DB_DATABASE}'
            # POSTGRES_USER: '${DB_USERNAME}'
            # POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        environment:
            PGPASSWORD: '${DB_PASSWORD}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD}'
        # volumes:
        #     - postgres-data:/var/lib/postgresql/data
        volumes:
            - 'sail-postgresql:/var/lib/postgresql/data'
        networks:
            - sail
        healthcheck:
            test: ["CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}"]
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s
    meilisearch:
        image: 'getmeili/meilisearch:latest'
        ports:
            - '${FORWARD_MEILISEARCH_PORT:-7700}:7700'
        volumes:
            - 'sail-meilisearch:/meili_data'
        networks:
            - sail
        healthcheck:
            test: ["CMD", "wget", "--no-verbose", "--spider",  "http://localhost:7700/health"]
            retries: 3
            timeout: 5s
    mailhog:
        image: 'mailhog/mailhog:latest'
        ports:
            - '${FORWARD_MAILHOG_PORT:-1025}:1025'
            - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
        networks:
            - sail
    selenium:
        image: 'selenium/standalone-chrome'
        # extra_hosts:
        #     - 'host.docker.internal:host-gateway'
        volumes:
            - '/dev/shm:/dev/shm'
        networks:
            - sail
networks:
    sail:
        driver: bridge
volumes:
    sail-postgresql:
        driver: local
    # sail-mysql:
    #     driver: local
    sail-redis:
        driver: local
    sail-meilisearch:
        driver: local

# export PGHOST=${PGHOST-localhost} ; export PGPORT=${PGPORT-5432} ; export PGUSER=${PGUSER-postgres} ; export PGPASSWORD=${PGPASSWORD-123456} ; export PGUSER=${PGUSER-postgres} ; export VISUAL=vim ; export EDITOR=vim ; export APP_PORT=12376 ; export FORWARD_DB_PORT=3307

# https://www.laravelgis.com/posts/laravel-postgres-and-redis
# https://github.com/laravel/sail/pull/28
# https://laracasts.com/discuss/channels/laravel/sail-postgresql-password-authentication-failed

# export PGHOST=${PGHOST-localhost} ; export PGPORT=${PGPORT-5432} ; export PGUSER=${PGUSER-postgres} ; export PGPASSWORD=${PGPASSWORD-123456} ; export PGUSER=${PGUSER-postgres} ; export VISUAL=vim ; export EDITOR=vim ; export APP_PORT=12376 ; export FORWARD_DB_PORT=5433



# version: "3.7"
# volumes:
#     postgres-data:
#     redis-data:
# networks:
#     frontend:
#     backend:
# services:
#     proxy:
#         image: nginx:latest
#         ports:
#             - "8080:80"
#         volumes:
#             - ./:/var/www/app
#             - ./docker/nginx/nginx-site.conf:/etc/nginx/conf.d/default.conf
#         networks:
#             - frontend
#             - backend
#     php:
#         build:
#             context: ./docker/php
#             dockerfile: Dockerfile
#         image: laravelgis-php:latest
#         volumes:
#             - ./:/var/www/app
#         networks:
#             - backend
#     postgres:
#         image: postgres:latest
#         volumes:
#             - postgres-data:/var/lib/postgresql/data
#         ports:
#             - "5432:5432"
#         environment:
#             POSTGRES_PASSWORD: 12345
#             POSTGRES_USER: laravelgis
#             POSTGRES_DB: laravelgis
#             PGDATA: /var/lib/postgresql/data
#         networks:
#             - backend
#     redis:
#         image: redis:latest
#         sysctls:
#             - net.core.somaxconn=511
#         ports:
#             - "6379:6379"
#         volumes:
#             - redis-data:/data
#         networks:
#             - backend